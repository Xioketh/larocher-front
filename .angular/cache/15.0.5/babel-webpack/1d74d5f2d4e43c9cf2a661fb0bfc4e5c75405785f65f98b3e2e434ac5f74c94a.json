{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { routes } from 'src/app/core/core.index';\nlet CustomerlistComponent = class CustomerlistComponent {\n  //** / pagination variables\n  constructor(data, pagination, sweetalert, router, customerService) {\n    this.data = data;\n    this.pagination = pagination;\n    this.sweetalert = sweetalert;\n    this.router = router;\n    this.customerService = customerService;\n    this.routes = routes;\n    this.initChecked = false;\n    // public tableData: Array<customerList> = [];\n    this.tableData = [];\n    // pagination variables\n    this.pageSize = 10;\n    this.serialNumberArray = [];\n    this.totalData = 0;\n    this.showFilter = false;\n    this.searchDataValue = '';\n    this.pagination.tablePageSize.subscribe(res => {\n      if (this.router.url == this.routes.customerList) {\n        this.getTableData({\n          skip: res.skip,\n          limit: res.limit\n        });\n        this.pageSize = res.pageSize;\n      }\n    });\n  }\n  getTableData(pageOption) {\n    this.customerService.getCustomerList().subscribe(apiRes => {\n      this.tableData = [];\n      this.serialNumberArray = [];\n      this.totalData = apiRes.totalData;\n      apiRes.data.map((res, index) => {\n        const serialNumber = index + 1;\n        if (index >= pageOption.skip && serialNumber <= pageOption.limit) {\n          res.sNo = serialNumber;\n          this.tableData.push(res);\n          this.serialNumberArray.push(serialNumber);\n        }\n      });\n      this.dataSource = new MatTableDataSource(this.tableData);\n      this.pagination.calculatePageSize.next({\n        totalData: this.totalData,\n        pageSize: this.pageSize,\n        tableData: this.tableData,\n        serialNumberArray: this.serialNumberArray\n      });\n    });\n  }\n  deleteBtn() {\n    this.sweetalert.deleteBtn();\n  }\n  searchData(value) {\n    this.dataSource.filter = value.trim().toLowerCase();\n    this.tableData = this.dataSource.filteredData;\n  }\n  sortData(sort) {\n    const data = this.tableData.slice();\n    if (!sort.active || sort.direction === '') {\n      this.tableData = data;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.tableData = data.sort((a, b) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const aValue = a[sort.active];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const bValue = b[sort.active];\n        return (aValue < bValue ? -1 : 1) * (sort.direction === 'asc' ? 1 : -1);\n      });\n    }\n  }\n  selectAll(initChecked) {\n    if (!initChecked) {\n      this.tableData.forEach(f => {\n        f.isSelected = true;\n      });\n    } else {\n      this.tableData.forEach(f => {\n        f.isSelected = false;\n      });\n    }\n  }\n};\nCustomerlistComponent = __decorate([Component({\n  selector: 'app-customerlist',\n  templateUrl: './customerlist.component.html',\n  styleUrls: ['./customerlist.component.scss']\n})], CustomerlistComponent);\nexport { CustomerlistComponent };","map":{"version":3,"mappings":"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","names":["Component","MatTableDataSource","routes","CustomerlistComponent","constructor","data","pagination","sweetalert","router","customerService","tablePageSize","subscribe","res","url","customerList","getTableData","skip","limit","pageSize","pageOption","getCustomerList","apiRes","tableData","serialNumberArray","totalData","map","index","serialNumber","sNo","push","dataSource","calculatePageSize","next","deleteBtn","searchData","value","filter","trim","toLowerCase","filteredData","sortData","sort","slice","active","direction","a","b","aValue","bValue","selectAll","initChecked","forEach","f","isSelected","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\MY PROJECT\\LAROCHER\\larocher_front\\src\\app\\core-component\\people\\customerlist\\customerlist.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  apiResultFormat,\r\n  DataService,\r\n  pageSelection,\r\n  routes,\r\n} from 'src/app/core/core.index';\r\nimport { customerList } from 'src/app/shared/model/page.model';\r\nimport { PaginationService, tablePageSize } from 'src/app/shared/shared.index';\r\nimport { SweetalertService } from 'src/app/shared/sweetalert/sweetalert.service';\r\nimport {CustomerService} from \"../../../../api-service/service/CustomerService\";\r\nimport {CustomerModel} from \"../../../../api-service/model/CustomerModel\";\r\n\r\n@Component({\r\n  selector: 'app-customerlist',\r\n  templateUrl: './customerlist.component.html',\r\n  styleUrls: ['./customerlist.component.scss'],\r\n})\r\nexport class CustomerlistComponent {\r\n  public routes = routes;\r\n  initChecked = false;\r\n  // public tableData: Array<customerList> = [];\r\n  public tableData: Array<CustomerModel> = [];\r\n  // pagination variables\r\n  public pageSize = 10;\r\n  public serialNumberArray: Array<number> = [];\r\n  public totalData = 0;\r\n  showFilter = false;\r\n  dataSource!: MatTableDataSource<customerList>;\r\n  public searchDataValue = '';\r\n  //** / pagination variables\r\n  constructor(\r\n    private data: DataService,\r\n    private pagination: PaginationService,\r\n    private sweetalert: SweetalertService,\r\n    private router: Router,\r\n    private customerService :CustomerService\r\n  ) {\r\n    this.pagination.tablePageSize.subscribe((res: tablePageSize) => {\r\n      if (this.router.url == this.routes.customerList) {\r\n        this.getTableData({ skip: res.skip, limit: res.limit });\r\n        this.pageSize = res.pageSize;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getTableData(pageOption: pageSelection): void {\r\n    this.customerService.getCustomerList().subscribe((apiRes: apiResultFormat) => {\r\n      this.tableData = [];\r\n      this.serialNumberArray = [];\r\n      this.totalData = apiRes.totalData;\r\n      apiRes.data.map((res: customerList, index: number) => {\r\n        const serialNumber = index + 1;\r\n        if (index >= pageOption.skip && serialNumber <= pageOption.limit) {\r\n          res.sNo = serialNumber;\r\n          this.tableData.push(res);\r\n          this.serialNumberArray.push(serialNumber);\r\n        }\r\n      });\r\n      this.dataSource = new MatTableDataSource<customerList>(this.tableData);\r\n      this.pagination.calculatePageSize.next({\r\n        totalData: this.totalData,\r\n        pageSize: this.pageSize,\r\n        tableData: this.tableData,\r\n        serialNumberArray: this.serialNumberArray,\r\n      });\r\n    });\r\n  }\r\n  deleteBtn() {\r\n    this.sweetalert.deleteBtn();\r\n  }\r\n\r\n\r\n  public searchData(value: string): void {\r\n    this.dataSource.filter = value.trim().toLowerCase();\r\n    this.tableData = this.dataSource.filteredData;\r\n  }\r\n\r\n  public sortData(sort: Sort) {\r\n    const data = this.tableData.slice();\r\n\r\n    if (!sort.active || sort.direction === '') {\r\n      this.tableData = data;\r\n    } else {\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      this.tableData = data.sort((a: any, b: any) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const aValue = (a as any)[sort.active];\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const bValue = (b as any)[sort.active];\r\n        return (aValue < bValue ? -1 : 1) * (sort.direction === 'asc' ? 1 : -1);\r\n      });\r\n    }\r\n  }\r\n\r\n  selectAll(initChecked: boolean) {\r\n    if (!initChecked) {\r\n      this.tableData.forEach((f) => {\r\n        f.isSelected = true;\r\n      });\r\n    } else {\r\n      this.tableData.forEach((f) => {\r\n        f.isSelected = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}